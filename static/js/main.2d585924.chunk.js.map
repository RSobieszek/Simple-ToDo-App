{"version":3,"sources":["components/Navbar.js","actions/todosActions.js","components/Todo.js","components/TodoList.js","components/Home.js","components/About.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","nextId","addTodo","todo","type","id","delTodo","toggleTodo","Todo","props","_props$todo","isCompleted","handleClick","btnId","onClick","e","target","style","textDecorationLine","color","cursor","currentTarget","TodoList","_this","dispatch","_this2","this","todoList","todos","map","components_Todo","key","React","Component","connect","state","ownProps","Home","handleChange","setState","value","handleSubmit","preventDefault","onSubmit","onChange","htmlFor","disabled","components_TodoList","About","role","aria-label","App","components_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","initState","rootReducer","arguments","length","undefined","action","newTodo","Object","objectSpread","concat","toConsumableArray","newTodos","filter","toggledTodos","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d585924.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"nav-wrapper blue-grey\">\n            <Link className=\"brand-logo center\" to='/'>Simple ToDo App</Link>\n            <ul className=\"right\">\n                <li><NavLink to='/'>Home</NavLink>7</li>\n                <li><NavLink to='/about'>About</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","let nextId = 50\n\nexport const addTodo = (todo) => ({\n    type: 'ADD_TODO',\n    id: nextId++,\n    todo\n})\n\nexport const delTodo = (id) => ({\n    type: 'DEL_TODO',\n    id\n})\n\nexport const toggleTodo = (id) => ({\n    type: 'TOGGLE_TODO',\n    id\n})","import React from 'react'\n\nconst Todo = (props) => {\n\n    const { id, todo, isCompleted } = props.todo\n\n    const handleClick = (btnId, id) => {\n        switch (btnId) {\n            case 'delete':\n                props.delTodo(id)\n                break;\n            case 'todoText':\n                props.toggleTodo(id)\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className=\"row valign-wrapper\">\n            <div\n                id=\"todoText\"\n                className=\"col s10\"\n                onClick={(e) => handleClick(e.target.id, id)}\n                style={isCompleted ? { textDecorationLine: 'line-through', color: 'grey', cursor: 'pointer' } : { cursor: 'pointer' }}>\n                {todo}\n            </div>\n            <div className=\"col s2\">\n                <button\n                    id=\"delete\"\n                    className=\"btn-floating btn-small deep-orange darken-2\"\n                    onClick={(e) => handleClick(e.currentTarget.id, id)}>\n                    <i className=\"material-icons\">close</i>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { delTodo, toggleTodo } from '../actions/todosActions'\n\nimport Todo from './Todo'\n\nclass TodoList extends React.Component {\n\n    delTodo = (id) => {\n        this.props.dispatch(delTodo(id))\n    }\n\n    toggleTodo = (id) => {\n        this.props.dispatch(toggleTodo(id))\n    }\n\n    render() {\n        const { todos } = this.props.todoList\n\n        const todoList = todos.map(todo => (\n            <Todo\n                key={todo.id}\n                todo={todo}\n                delTodo={this.delTodo}\n                toggleTodo={this.toggleTodo} />\n        ))\n\n        return (\n            <div className=\"container\">{todoList}</div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        todoList: state\n    }\n}\n\nexport default connect(mapStateToProps)(TodoList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions/todosActions'\n\nimport TodoList from './TodoList';\n\nclass Home extends React.Component {\n\n    state = {\n        todo: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({ todo: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.dispatch(addTodo(this.state.todo))\n        this.setState({ todo: '' })\n    }\n\n    render() {\n        return (\n            <div className=\"container main-list\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"input-field col m8 s12\">\n                                <input\n                                    id=\"todo\"\n                                    type=\"text\"\n                                    onChange={this.handleChange}\n                                    value={this.state.todo} />\n                                <label htmlFor=\"todo\">Todo</label>\n                            </div>\n                            <div className=\"input-field col m4 s12\">\n                                <button\n                                    className=\"btn l light-green darken-1\"\n                                    type=\"submit\"\n                                    disabled={!this.state.todo}\n                                    >Add Todo\n                                    <i className=\"material-icons left\">add</i>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <TodoList />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Home)","import React from 'react'\n\nconst About = () => {\n    return (\n        <div className=\"container center-align\">\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h4>About</h4>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <p>Simple ToDo App made to practice:</p>\n                    <ul>\n                        <li>- React</li>\n                        <li>- Redux</li>\n                        <li>- React Router</li>\n                        <li>- Materialize</li>\n                    </ul>\n                    <p>Enjoy <span role=\"img\" aria-label=\"smile\">&#128516;</span> </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './components/Navbar';\nimport Home from './components/Home'\nimport About from './components/About';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    todos: [\n        { id: 1, todo: 'Add more todos', isCompleted: false },\n        { id: 2, todo: 'Remove some todos', isCompleted: false },\n        { id: 3, todo: 'Learn Redux', isCompleted: true },\n        { id: 4, todo: 'Learn React Router', isCompleted: true },\n        { id: 5, todo: 'Add Materialize', isCompleted: true },\n    ]\n}\n\nconst rootReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            let newTodo = {\n                id: action.id,\n                todo: action.todo,\n                isCompleted: false\n            }\n            return {\n                ...state,\n                todos: [...state.todos, newTodo]\n            }\n        case 'DEL_TODO':\n            let newTodos = state.todos.filter(todo => todo.id !== action.id)\n\n            return {\n                ...state,\n                todos: [...newTodos]\n            }\n        case 'TOGGLE_TODO':\n            let toggledTodos = state.todos.map(todo => {\n                return (todo.id === action.id)\n                    ? { ...todo, isCompleted: !todo.isCompleted }\n                    : todo\n            })\n            return {\n                ...state,\n                todos: [...toggledTodos]\n            }\n        default:\n            return state\n    }\n}\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './reducers/rootReducer'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}